#ifndef OPENCLX_IMAGE
#define OPENCLX_IMAGE

#include <openclx/image_format>
#include <openclx/memory_object>
#include <openclx/slice>

namespace clx {

    class image: public memory_object {

    public:
        using slice_3d_type = slice_3d<const image&>;

    public:

        using memory_object::memory_object;

        inline slice_3d_type
        slice(
            const range& offset, const range& size,
            size_t row_pitch=0, size_t slice_pitch=0
        ) const {
            return {*this,offset,size,row_pitch,slice_pitch};
        }

        inline range
        dimensions() const {
            return {width(),height(),depth()};
        }

        image_format format() const;
        size_t element_size() const;
        size_t row_pitch() const;
        size_t slice_pitch() const;
        size_t width() const;
        size_t height() const;
        size_t depth() const;

    };

}

#endif // vim:filetype=cpp
