#ifndef OPENCLX_INTEL_CONTEXT
#define OPENCLX_INTEL_CONTEXT

#include <openclx/context>
#include <openclx/forward>

namespace clx {

    namespace intel {

        class context: public ::clx::context {

        public:
            using ::clx::context::context;

            #if CL_TARGET_VERSION >= 120 && defined(cl_intel_motion_estimation)
            clx::intel::me_accelerator
            motion_estimation_accelerator(const intel::me_descriptor& desc) const;
            #endif

            #if CL_TARGET_VERSION >= 120 && defined(cl_intel_advanced_motion_estimation)
            unsigned_int_type motion_estimation_version() const;
            #endif

            #if defined(cl_intel_dx9_media_sharing)
            intel::memory_object
            media_surface(
                memory_flags flags,
                intel::surface_type* ptr,
                intel::handle_type handle,
                intel::uint_type plane
            ) const;
            #endif

            #if defined(cl_intel_va_api_media_sharing)
            intel::va::memory_object media_surface(
                memory_flags flags,
                intel::va::surface_type* ptr,
                unsigned_int_type plane) const;
            #endif

        };

    }

}

#endif // vim:filetype=cpp

