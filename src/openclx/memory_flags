#ifndef OPENCLX_MEMORY_FLAGS
#define OPENCLX_MEMORY_FLAGS

#include <openclx/bits/flags>
#include <openclx/types>

namespace clx {

	enum class memory_flags: memory_flags_type {
		read_write = CL_MEM_READ_WRITE,
		write_only = CL_MEM_WRITE_ONLY,
		read_only = CL_MEM_READ_ONLY,
		use_host_ptr = CL_MEM_USE_HOST_PTR,
		alloc_host_ptr = CL_MEM_ALLOC_HOST_PTR,
		copy_host_ptr = CL_MEM_COPY_HOST_PTR,
		host_write_only = CL_MEM_HOST_WRITE_ONLY,
		host_read_only = CL_MEM_HOST_READ_ONLY,
		host_no_access = CL_MEM_HOST_NO_ACCESS,
		svm_fine_grain_buffer = CL_MEM_SVM_FINE_GRAIN_BUFFER,
		svm_atomics = CL_MEM_SVM_ATOMICS,
		kernel_read_and_write = CL_MEM_KERNEL_READ_AND_WRITE,
	};

	CLX_FLAGS(memory_flags, memory_flags_type)

}

#endif // vim:filetype=cpp

