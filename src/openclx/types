#ifndef OPENCLX_TYPES
#define OPENCLX_TYPES

#include <openclx/cl>

namespace clx {

	typedef ::cl_char char_type;
	typedef ::cl_uchar unsigned_char_type;
	typedef ::cl_short short_type;
	typedef ::cl_ushort unsigned_short_type;
	typedef ::cl_int int_type;
	typedef ::cl_uint unsigned_int_type;
	typedef ::cl_long long_type;
	typedef ::cl_ulong unsigned_long_type;
	typedef ::cl_half half_type;
	typedef ::cl_float float_type;
	typedef ::cl_double double_type;

	typedef ::cl_GLuint opengl_unsigned_int_type;
	typedef ::cl_GLint opengl_int_type;
	typedef ::cl_GLenum opengl_enum_type;

	typedef ::cl_platform_id platform_type;
	typedef ::cl_device_id device_type;
	typedef ::cl_context context_type;
	typedef ::cl_command_queue command_queue_type;
	typedef ::cl_mem memory_type;
	typedef ::cl_program program_type;
	typedef ::cl_kernel kernel_type;
	typedef ::cl_event event_type;
	typedef ::cl_sampler sampler_type;

	typedef ::cl_bool bool_type;
	typedef ::cl_bitfield bitfield_type;
	typedef ::cl_device_mem_cache_type device_memory_cache_type;
	typedef ::cl_device_local_mem_type device_local_memory_type;
	typedef ::cl_device_exec_capabilities device_execution_capabilities_type;
	typedef ::cl_device_fp_config device_floating_point_flags_type;
	typedef ::cl_command_queue_properties command_queue_flags_type;
	typedef ::cl_device_type device_flags_type;
	typedef ::cl_device_partition_property device_partition_type;
	typedef ::cl_device_affinity_domain device_affinity_domain_type;
	typedef ::cl_context_properties context_properties_type;
	#if CLX_OPENCL_VERSION >= 200
	typedef ::cl_queue_properties queue_properties_type;
	#endif
	typedef ::cl_command_queue_properties command_queue_properties_type;
	typedef ::cl_channel_order channel_order_type;
	typedef ::cl_channel_type channel_data_type;
	typedef ::cl_image_format image_format_type;
	typedef ::cl_build_status build_status_type;
	typedef ::cl_command_type command_type;
	typedef ::cl_int command_status_type;

	class platform;
	class device;
	class context;
	class command_queue;
	class program;
	class kernel;
	class event;

}

#endif // vim:filetype=cpp
